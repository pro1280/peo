(function(define)
	repeat
		game:GetService("RunService").Heartbeat:wait()
	until game:IsLoaded();
	local function check_exploit()  --> 检查注入器配置, 如果注入器不行就不能加载脚本
		if not getgenv then
			return false;
		end
		return true;
	end
	local whitelisted = false;
	
	
	local _CONFIGS = {  --> 游戏配置列表, 如果不懂请勿修改, 可以改数字
	   ["UI_NAME"] = define,
	   ["总开关"] = nil,
	   ["防误触开关"] = true,
	   ["cutPlankByHONG"] = nil,
	   ["无限跳"] = false,
	   ["穿墙开关"] = false,
	   ["飞行开关"] = false,
	   ["isBuying"] = false,
	   ["取消购买"] = false,
	   ["处理木头"] = false,
	   ["处理木头并加工"] = false,
	   ["点击砍树"] = false,
	   ["填充工具"] = false,
	   ["刷粉车"] = false,
	   ["粉车器"] = nil,
	   ["自动砍树"] = nil,
	   ["UI长"] = 250,
	   ["UI宽"] = 300,
	   ["传送模式"] = 2,
	   ["飞行速度"] = 4,
	   ["步行速度"] = 16,
	   ["跳跃力"] = 50,  --> 比如这个50  代表加载脚本初始的跳跃力是50, 可以改 100或者150等等
	   ["悬浮高度"] = 0,
	   ["重力"] = 198,
	   ["相机焦距"] = 100,
	   ["广角"] = 70,
	};
	
	local function ClearConfig()  --> 清除游戏配置功能
		if _CONFIGS["总开关"] ~= nil then
			_CONFIGS["总开关"]:Disconnect()
			_CONFIGS["总开关"] = nil;
			_CONFIGS["防误触开关"] = nil;
			_CONFIGS["无限跳"] = false;
			_CONFIGS["穿墙开关"] = false;
			_CONFIGS["UI长"] = 250;
			_CONFIGS["UI宽"] = 300;
			_CONFIGS["飞行速度"] = 4
			_CONFIGS["飞行开关"] = false
			_CONFIGS["isBuying"] = false;
			getgenv()["点击出售木头"] = false;
			_CONFIGS["取消购买"] = false;
			_CONFIGS["传送模式"] = 2;
			_CONFIGS["处理木头"] = false;
			_CONFIGS["处理木头并加工"] = false
			_CONFIGS["点击砍树"] = false;
			_CONFIGS["填充工具"] = false
			_CONFIGS["刷粉车"] = false
			if getgenv().Test then
				getgenv().Test:Disconnect();
				getgenv().Test = nil;
			end
			if getgenv().CutWoodToSawmill then
				getgenv().CutWoodToSawmill:Disconnect()
				getgenv().CutWoodToSawmill = nil
			end
			if _G.HardDraggerConnection then
				_G.HardDraggerConnection:Disconnect()
				_G.HardDraggerConnection = nil
			end
			if _CONFIGS["cutPlankByHONG"] then
				_CONFIGS["cutPlankByHONG"]:Disconnect();
				_CONFIGS["cutPlankByHONG"] = nil;
			end
			if _G.OrigDrag then
				_G.OrigDrag = nil
			end
			if clickSellLog then
				clickSellLog:Disconnect();
				clickSellLog = nil;
			end
			if mod then
				mod:Disconnect();
				mod = nil;
			end
			if _CONFIGS["自动砍树"] then
				_CONFIGS["自动砍树"]:Disconnect();
				_CONFIGS["自动砍树"] = nil;
			end
			if DayOfNight then
			    DayOfNight:Disconnect()
			    DayOfNight = nil
			end
			if getgenv().PlankToBp then
			    getgenv().PlankToBp:Disconnect()
			    getgenv().PlankToBp = nil
			end
			if _CONFIGS["粉车器"] then
				_CONFIGS["粉车器"]:Disconnect();
				_CONFIGS["粉车器"] = nil;
			end
		end
	end
	ClearConfig()
	
	function ifError(msg)
		warn("脚本出问题辣!")
		writefile(string.format("走马观花错误日志%s.txt", os.date():sub(11):gsub(" ", "-")), string.format("具体错误原因为:\n %s", msg))
	end
	
	local HONG = {
		GS = function(...)
			return game.GetService(game, ...);
		end;
	}
	
	
	HONG.RS = HONG.GS"RunService"
	HONG.RES = HONG.GS"ReplicatedStorage"
	HONG.LIGHT = HONG.GS"Lighting"
	HONG.TPS = HONG.GS"TeleportService"
	HONG.LP = HONG.GS"Players".LocalPlayer
	HONG.WKSPC = HONG.GS"Workspace"
	HONG.COREGUI = HONG.GS "CoreGui";
	local Mouse = HONG.LP:GetMouse()
	
	
	function HONG:printf(...)
		print(string.format(...));
	end
	
	function HONG:SelectNotify(...)
		local Args = {
			...
		}
		local NotificationBindable = Instance.new("BindableFunction")
		NotificationBindable.OnInvoke = Args[6]
		game.StarterGui:SetCore("SendNotification", {
			Title = Args[1],
			Text = Args[2],
			Icon = nil,
			Duration = Args[5],
			Button1 = Args[3],
			Button2 = Args[4],
			Callback = NotificationBindable
		})
		return Args
	end
	
	
	function HONG:DragModel(...)  --> 移动模型功能
		local Args = {
			...
		};
		assert(Args[1]:IsA("Model") == true, "参数1必须是模型!");
		if _CONFIGS["传送模式"] == 1 then
			pcall(function()
				self.RES.Interaction.ClientIsDragging:FireServer(Args[1])
			end);
			Args[1]:PivotTo(Args[2]);
		elseif _CONFIGS["传送模式"] == 2 then
			pcall(function()
				self.RES.Interaction.ClientIsDragging:FireServer(Args[1])
			end);
			if not Args[1].PrimaryPart then
				Args[1].PrimaryPart = Args[1]:FindFirstChildOfClass("Part")
			end
			Args[1]:SetPrimaryPartCFrame(Args[2])
		end
	end
	
	function HONG:Teleport(...)  --> 传送功能
		local Args = {
			...
		};
		if self.LP.Character.Humanoid.SeatPart then
			spawn(function()
				for i = 1, 15 do
					self:DragModel(self.LP.Character.Humanoid.SeatPart.Parent, Args[1]);
				end
			end)
			return;
		end
		for i = 1, 3 do
			self:DragModel(self.LP.Character, Args[1]);
			task.wait();
		end
	end
	
	function HONG:TP(x, y, z)
		self:Teleport(CFrame.new(x, y, z));
	end
	
	function HONG:ServiceTP(ID)  --> 跳转服务器功能, 用于重进服务器
		HONG.TPS:Teleport(ID, HONG.LP)
    end
    
	local whitelist_table = {};
    local check_whitelist = function()  --> 检查白名单功能        
        local url = ""; --> 白名单网址
        local res = game.HttpGet(game, url);
        
    	whitelist_table = loadstring(res)()
    	
    	local plr = game:GetService("Players").LocalPlayer;
    	table.foreach(whitelist_table, function (i,v)
    	if v == plr.Name  then --> 判断玩家用户名
    	    	whitelisted = true;
    	    end
    	end)
    end
    check_whitelist()
	
	local function checkModify()
	
		local develop = {  --> 脚本开发者列表, 里面双引号填写游戏用户名, 脚本开发者可以免去白名单检查
			"lixiang_c4",
			"MIXI_SERVICE1",
			"MIXI_SERVICE2",
			"MIXI_SERVICE3",
			"MIXI_SERVICE4",
			"zhanghuihuihui",
			"jjdkekd30y9",
		}
		local plr = game:GetService("Players").LocalPlayer;
		local is_dev = false;
		local function isDev()
			table.foreach(develop, function(i, v)
				if v == plr.Name then
					is_dev = true;
					return true;
				end
			end)
			return is_dev;
		end
		--↓ 判断代码是否被修改
		if (getgenv().zhanghuihuihui ~= "走马观花作者 紅" or not getgenv().zhanghuihuihui) and not isDev() then
			plr:Kick("请不要修改代码");
			task.wait(.01);
       -- while true do end
		end
		getgenv().zhanghuihuihui = nil;
	end
	local functions = {
		checkModify
	};
	table.foreach(functions, function(_, v)
		pcall(v);
	end)
	if whitelisted == true then
		local plr = game:GetService("Players").LocalPlayer;
		game.StarterGui:SetCore('SendNotification', {
			Title = '白名单认证',  --> 单引号里面的中文可以改, 加载脚本时的通知
			Text = '玩家 : ' .. plr.Name .. ' 你是白名单玩家,稍后会加载脚本'
		})
		local _warn = warn;
		
		task.wait(0.5)
		--↓ 这些是在游戏开发者控制台输出的东西, 修不修改无大碍, 脚本用户看不到, 入过要修改, 修改单引号里面的中文
		_warn('---------------')
		_warn('欢迎' .. plr.Name .. '使用 走马观花脚本')
		_warn('---------------')
		_warn('白名单玩家 : ' .. #whitelist_table .. ' 人')
		_warn('---------------')
		_warn('脚本作者: 紅')
		_warn('---------------')
    
    --<<  UI 部分, 不懂代码请勿修改 >>--
		local a = {
			Plrs = "Players",
			LP = "LocalPlayer",
			RS = "ReplicatedStorage"
		}
		local b = setmetatable({}, {
			__index = function(self, c)
				return game.GetService(game, c)
			end,
			__call = function(self, c)
				return game.GetService(game, c)
			end
		})
		if b.CoreGui:FindFirstChild(_CONFIGS.UI_NAME) then
			b.CoreGui[_CONFIGS.UI_NAME]:Destroy()
		end
		local dm = UDim.new
		local dn = UDim2.new
		local dp = Color3.fromRGB
		local dq = Instance.new
		local dr = function()
		end
		local ds = b.Players.LocalPlayer:GetMouse()
		getgenv().library = {
			flags = {
				GetState = function(dt, du)
					return library.flags[du].State
				end
			},
			modules = {},
			currentTab = nil
		}
		function library:UpdateToggle(du, be)
			local be = be or library.flags:GetState(du)
			if be == library.flags:GetState(du) then
				return
			end
			library.flags[du]:SetState(be)
		end
		local dv = {}
		function dv:Tween(dw, dx, dy, dz, dA)
			return b.TweenService:Create(
	dx, TweenInfo.new(dy or 0.25, Enum.EasingStyle[dz or "Linear"], Enum.EasingDirection[dA or "InOut"]), dw)
		end
		function dv:SwitchTab(dB)
			local dC = library.currentTab
			if dC == dB then
				return
			end
			library.currentTab = dB
			dv:Tween({
				Transparency = 1
			}, dC[2].Glow):Play()
			dv:Tween({
				Transparency = 0
			}, dB[2].Glow):Play()
			dC[1].Visible = false
			dB[1].Visible = true
		end
		local dD = dq("ScreenGui")
		local Open = dq("TextButton")
		local dE = dq("Frame")
		local dF = dq("UICorner")
		local dG = dq("TextLabel")
		local dH = dq("UICorner")
		local dI = dq("Frame")
		local dJ = dq("UICorner")
		local dK = dq("ScrollingFrame")
		local dL = dq("UIListLayout")
		local dM = dq("UIPadding")
		local dN = dq("Frame")
		local dO = dq("UICorner")
		dD.Name = _CONFIGS.UI_NAME
		dD.Parent = b.CoreGui
		dE.Name = "Main"
		dE.Parent = dD
		dE.BackgroundColor3 = dp(52, 62, 72)
		dE.BorderSizePixel = 0
		dE.Position = dn(0.5, 0, 0.5, 0)
		dE.Size = dn(0, 448, 0, 280)
		dE.AnchorPoint = Vector2.new(0.5, 0.5)
		dE.Active = true
		dE.Draggable = true
		dF.CornerRadius = dm(0, 6)
		dF.Name = "MainCorner"
		dF.Parent = dE
		dG.Parent = dE
		dG.BackgroundColor3 = dp(58, 69, 80)
		dG.BorderSizePixel = 0
		dG.Position = dn(0, 6, 0, 6)
		dG.Size = dn(0, 436, 0, 24)
		dG.Font = Enum.Font.GothamBold
		dG.Text = "  " .. _CONFIGS.UI_NAME;
		dG.TextColor3 = dp(255, 255, 255)
		dG.TextSize = 14.000
		dG.TextXAlignment = Enum.TextXAlignment.Left
		Open.Name = "Open"
		Open.Parent = dD
		Open.BackgroundColor3 = dE.BackgroundColor3;
		Open.Position = UDim2.new(0.839879155, 0, - 0.0123076923, 0)
		Open.BorderSizePixel = 2
		Open.BorderColor3 = dG.BackgroundColor3
		Open.Size = UDim2.new(0, 55, 0, 25)
		Open.Font = Enum.Font.SourceSans
		Open.Text = "隐藏"
		Open.TextColor3 = Color3.fromRGB(255, 255, 255)
		Open.TextSize = 14.000
		Open.Active = true
		Open.Draggable = true
		local TOGGLE = true;
		Open.MouseButton1Down:connect(function()
			TOGGLE = not TOGGLE
			dE.Visible = TOGGLE
			Open.Text = (TOGGLE and "隐藏" or "打开");
		end)
		dH.CornerRadius = dm(0, 6)
		dH.Name = "TextLabelCorner"
		dH.Parent = dG
		dI.Name = "Sidebar"
		dI.Parent = dE
		dI.BackgroundColor3 = dp(58, 69, 80)
		dI.BorderSizePixel = 0
		dI.Position = dn(0, 6, 0, 36)
		dI.Size = dn(0, 106, 0, 238)
		dJ.CornerRadius = dm(0, 6)
		dJ.Name = "SidebarCorner"
		dJ.Parent = dI
		dK.Name = "TabButtons"
		dK.Parent = dI
		dK.Active = true
		dK.BackgroundColor3 = dp(255, 255, 255)
		dK.BackgroundTransparency = 1.000
		dK.BorderSizePixel = 0
		dK.Size = dn(0, 106, 0, 238)
		dK.ScrollBarThickness = 0
		dL.Parent = dK
		dL.HorizontalAlignment = Enum.HorizontalAlignment.Center
		dL.SortOrder = Enum.SortOrder.LayoutOrder
		dL.Padding = dm(0, 5)
		dM.Parent = dK
		dM.PaddingTop = dm(0, 6)
		dN.Name = "TabHolder"
		dN.Parent = dE
		dN.BackgroundColor3 = dp(58, 69, 80)
		dN.BorderSizePixel = 0
		dN.Position = dn(0, 118, 0, 36)
		dN.Size = dn(0, 324, 0, 238)
		dO.CornerRadius = dm(0, 6)
		dO.Name = "TabHolderCorner"
		dO.Parent = dN
		dL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
	function()
			dK.CanvasSize = dn(0, 0, 0, dL.AbsoluteContentSize.Y + 12)
		end)
		function createBaseNotifications()
			if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("NotificationHolder") then
				return game:GetService("Players").LocalPlayer.PlayerGui.NotificationHolder
			end
			local ScreenGui = Instance.new("ScreenGui")
			ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			local ToggleNotif = Instance.new("Frame")
			ToggleNotif.Name = "ToggleNotif"
			ToggleNotif.ZIndex = 5
			ToggleNotif.AnchorPoint = Vector2.new(1, 1)
			ToggleNotif.Visible = false
			ToggleNotif.Size = UDim2.new(0, 291, 0, 56)
			ToggleNotif.Position = UDim2.new(1, 0, 1, 0)
			ToggleNotif.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
			ToggleNotif.Parent = ScreenGui
			local UiCorner = Instance.new("UICorner")
			UiCorner.Name = "UiCorner"
			UiCorner.Parent = ToggleNotif
			local Dropshadow = Instance.new("UIStroke")
			Dropshadow.Name = "Dropshadow"
			Dropshadow.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
			Dropshadow.Transparency = 0.8
			Dropshadow.Thickness = 2
			Dropshadow.Color = Color3.fromRGB(20, 20, 20)
			Dropshadow.Parent = ToggleNotif
			local SepVertical = Instance.new("Frame")
			SepVertical.Name = "SepVertical"
			SepVertical.Size = UDim2.new(0, 2, 0, 56)
			SepVertical.BackgroundTransparency = 0.5
			SepVertical.Position = UDim2.new(0.7423077, 0, 0, 0)
			SepVertical.BorderSizePixel = 0
			SepVertical.BackgroundColor3 = Color3.fromRGB(68, 68, 68)
			SepVertical.Parent = ToggleNotif
			local SepHorizontal = Instance.new("Frame")
			SepHorizontal.Name = "SepHorizontal"
			SepHorizontal.Size = UDim2.new(0, 72, 0, 2)
			SepHorizontal.BackgroundTransparency = 0.5
			SepHorizontal.Position = UDim2.new(0.75, 0, 0.4464286, 2)
			SepHorizontal.BorderSizePixel = 0
			SepHorizontal.BackgroundColor3 = Color3.fromRGB(68, 68, 68)
			SepHorizontal.Parent = ToggleNotif
			local Title = Instance.new("TextLabel")
			Title.Name = "Title"
			Title.Size = UDim2.new(0, 216, 0, 19)
			Title.BackgroundTransparency = 1
			Title.BorderSizePixel = 0
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.FontSize = Enum.FontSize.Size14
			Title.TextSize = 14
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.Font = Enum.Font.SourceSans
			Title.Parent = ToggleNotif
			local Paragraph = Instance.new("TextLabel")
			Paragraph.Name = "Paragraph"
			Paragraph.Size = UDim2.new(0, 218, 0, 37)
			Paragraph.BackgroundTransparency = 1
			Paragraph.Position = UDim2.new(0, 0, 0.3392857, 0)
			Paragraph.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Paragraph.FontSize = Enum.FontSize.Size14
			Paragraph.TextSize = 14
			Paragraph.TextColor3 = Color3.fromRGB(255, 255, 255)
			Paragraph.Text = ""
			Paragraph.TextYAlignment = Enum.TextYAlignment.Top
			Paragraph.TextWrapped = true
			Paragraph.Font = Enum.Font.SourceSans
			Paragraph.TextWrap = true
			Paragraph.TextXAlignment = Enum.TextXAlignment.Left
			Paragraph.Parent = ToggleNotif
			local UIPadding = Instance.new("UIPadding")
			UIPadding.PaddingLeft = UDim.new(0, 10)
			UIPadding.PaddingRight = UDim.new(0, 5)
			UIPadding.Parent = Paragraph
			local True = Instance.new("TextButton")
			True.Name = "True"
			True.Size = UDim2.new(0, 72, 0, 27)
			True.BackgroundTransparency = 1
			True.Position = UDim2.new(0.75, 0, 0, 0)
			True.BorderSizePixel = 0
			True.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			True.FontSize = Enum.FontSize.Size14
			True.TextSize = 14
			True.TextColor3 = Color3.fromRGB(255, 255, 255)
			True.Text = "Yes"
			True.Font = Enum.Font.SourceSans
			True.Parent = ToggleNotif
			local False = Instance.new("TextButton")
			False.Name = "False"
			False.Size = UDim2.new(0, 72, 0, 27)
			False.BackgroundTransparency = 1
			False.Position = UDim2.new(0.75, 0, 0.5178571, 0)
			False.BorderSizePixel = 0
			False.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			False.FontSize = Enum.FontSize.Size14
			False.TextSize = 14
			False.TextColor3 = Color3.fromRGB(255, 255, 255)
			False.Text = "No"
			False.Font = Enum.Font.SourceSans
			False.Parent = ToggleNotif
			local LocalScript = Instance.new("LocalScript")
			LocalScript.Parent = ScreenGui
			local DefaultNotif = Instance.new("Frame")
			DefaultNotif.Name = "DefaultNotif"
			DefaultNotif.ZIndex = 5
			DefaultNotif.AnchorPoint = Vector2.new(1, 1)
			DefaultNotif.Visible = false
